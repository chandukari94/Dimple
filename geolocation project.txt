Click and Download:https://developer.salesforce.com/tools/sfdxcli

Commands List:Link
--------------
https://wilsonmar.github.io/salesforce-dx/#why-sfdx

Create Source Files from the CLI:

Execute one of these commands.

apex:class:create
apex:trigger:create
lightning:app:create
lightning:component:create
lightning:event:create
lightning:interface:create
lightning:test:create
visualforce:component:create
visualforce:page:create

-d, --outputdir	:The directory for saving the created files. If you donâ€™t indicate a directory, your source is added to the current folder.
-t, --template	:Template used for the file creation.


Create the Account Search Apex Controller:

1.sfdx force:apex:class:create -n AccountSearchController -d force-app/main/default/classes

2.public with sharing class AccountSearchController {
    @AuraEnabled
    public static List<Account> searchAccounts( String searchTerm ) {
        List<Account> accounts = new List<Account>();
        if ( String.isNotBlank( searchTerm ) ) {
            List<List<SObject>> searchResults = [
                FIND :searchTerm
                RETURNING Account(
                    Id, Name, Phone, Website,
                    BillingStreet, BillingCity,
                    BillingState, BillingPostalCode
                    ORDER BY Name
                    LIMIT 10
                )
            ];
            accounts = searchResults[0];
        }
        return accounts;
    }
}

3.Now, push (synchronize) your new code to the scratch org.


Q.What's the CLI command to create a new Apex class called NewClass in the force-app folder?

A.sfdx force:apex:class:create -n AccountSearchController -d force-app/main/default/classes

Q.What's the CLI command to create a new Aura component called ListView in the force-app folder?

A.sfdx force:lightning:component:create -n AccountSearch -d force-app/main/default/aura
--------------------------------------------------------------------------------------------------------------

Create the Account Map Aura Component:
sfdx force:lightning:component:create -n AccountMap -d force-app/main/default/aura

Lightning map:

<aura:component>
    <aura:handler event="c:AccountsLoaded" action="{!c.onAccountsLoaded}"/>
    <aura:attribute name="mapMarkers" type="Map[]"/>
    <lightning:card title="Account Map" iconName="action:map">
        <lightning:map mapMarkers="{!v.mapMarkers}"/>
    </lightning:card>
</aura:component>

({
    onAccountsLoaded: function( component, event, helper ) {
        var mapMarkers = [];
        var accounts = event.getParam( 'accounts' );
        for ( var i = 0; i < accounts.length; i++ ) {
            var account = accounts[i];
            var marker = {
                'location': {
                    'Street': account.BillingStreet,
                    'City': account.BillingCity,
                    'PostalCode': account.BillingPostalCode
                },
                'title': account.Name,
                'description': (
                    'Phone: ' + account.Phone +
                    '<br/>' +
                    'Website: ' + account.Website
                ),
                'icon': 'standard:location'
            };
            mapMarkers.push( marker );
        }
        component.set( 'v.mapMarkers', mapMarkers );
    }
})

-----------------------------------------------------------------------------------------------------------
Validate Your App:

1.Create a new scratch org.
sfdx force:org:create -f config/project-scratch-def.json -a GeoTestOrg

2.Push your local source and metadata to the scratch org.
sfdx force:source:push -u GeoTestOrg

3.Assign your permission set.
sfdx force:user:permset:assign -n Geolocation -u GeoTestOrg
-------------------------------------------------------------------------------------------------------------------
Output Link:

<apex:page standardController="Account" recordSetVar="accounts">
    <apex:pageBlock title="Accounts">
      <apex:repeat value="{!Accounts}" var="a">
      <li>
       <apex:outputLink value="{!URLFOR($Action.Account.View, a.id)}">{!a.Name}
       </apex:outputLink>
     </li>
   </apex:repeat>
   </apex:pageBlock> 
</apex:page>
-------------------------------------------------------------------------------------------------------------